local a={Enabled=false,Boxes=true,BoxShift=CFrame.new(0,-1.5,0),BoxSize=Vector3.new(4,6,0),Color=Color3.fromRGB(0,255,0),FaceCamera=false,Names=false,TeamColor=true,Thickness=2,AttachShift=1,TeamMates=true,Players=false,Objects=setmetatable({},{__mode="kv"}),Overrides={}}local b=game.Workspace;local c=game.Players;local c=c.LocalPlayer;local c=b.CurrentCamera;local d=game:GetService("Players")local e=d.LocalPlayer;local f=e:GetMouse()local f=Vector3.new;local f=c.WorldToViewportPoint;local function g(a,b)local a=Drawing.new(a)b=b or{}for b,c in pairs(b)do a[b]=c end;return a end;function a:GetTeam(a)local b=self.Overrides.GetTeam;if b then return b(a)end;return a and a.Team end;function a:IsTeamMate(a)local b=self.Overrides.IsTeamMate;if b then return b(a)end;return self:GetTeam(a)==self:GetTeam(e)end;function a:GetColor(a)local b=self.Overrides.GetColor;if b then return b(a)end;local a=self:GetPlayerFromChar(a)return a and self.TeamColor and a.Team and a.Team.TeamColor.Color or self.Color end;function a:GetPlayerFromChar(a)local b=self.Overrides.GetPlayerFromChar;if b then return b(a)end;return d:GetPlayerFromCharacter(a)end;function a:Toggle(a)self.Enabled=a;if not a then for a,a in pairs(self.Objects)do if a.Type=="Box"then if a.Temporary then a:Remove()else for a,a in pairs(a.Components)do a.Visible=false end end end end end end;function a:GetBox(a)return self.Objects[a]end;function a:AddObjectListener(b,c)local function d(b)if type(c.Type)=="string"and b:IsA(c.Type)or c.Type==nil then if type(c.Name)=="string"and b.Name==c.Name or c.Name==nil then if not c.Validator or c.Validator(b)then local a=a:Add(b,{PrimaryPart=type(c.PrimaryPart)=="string"and b:WaitForChild(c.PrimaryPart)or type(c.PrimaryPart)=="function"and c.PrimaryPart(b),Color=type(c.Color)=="function"and c.Color(b)or c.Color,ColorDynamic=c.ColorDynamic,Name=type(c.CustomName)=="function"and c.CustomName(b)or c.CustomName,IsEnabled=c.IsEnabled,RenderInNil=c.RenderInNil})if c.OnAdded then coroutine.wrap(c.OnAdded)(a)end end end end end;if c.Recursive then b.DescendantAdded:Connect(d)for a,a in pairs(b:GetDescendants())do coroutine.wrap(d)(a)end else b.ChildAdded:Connect(d)for a,a in pairs(b:GetChildren())do coroutine.wrap(d)(a)end end end;local h={}h.__index=h;function h:Remove()a.Objects[self.Object]=nil;for a,b in pairs(self.Components)do b.Visible=false;b:Remove()self.Components[a]=nil end end;function h:Update()if not self.PrimaryPart then return self:Remove()end;local d;if a.Highlighted==self.Object then d=a.HighlightColor else d=self.Color or self.ColorDynamic and self:ColorDynamic()or a:GetColor(self.Object)or a.Color end;local e=true;if a.Overrides.UpdateAllow and not a.Overrides.UpdateAllow(self)then e=false end;if self.Player and not a.TeamMates and a:IsTeamMate(self.Player)then e=false end;if self.Player and not a.Players then e=false end;if self.IsEnabled and(type(self.IsEnabled)=="string"and not a[self.IsEnabled]or type(self.IsEnabled)=="function"and not self:IsEnabled())then e=false end;if not b:IsAncestorOf(self.PrimaryPart)and not self.RenderInNil then e=false end;if not e then for a,a in pairs(self.Components)do a.Visible=false end;return end;if a.Highlighted==self.Object then d=a.HighlightColor end;local b=self.PrimaryPart.CFrame;if a.FaceCamera then b=CFrame.new(b.p,c.CFrame.p)end;local e=self.Size;local e={TopLeft=b*a.BoxShift*CFrame.new(e.X/2,e.Y/2,0),TopRight=b*a.BoxShift*CFrame.new(-e.X/2,e.Y/2,0),BottomLeft=b*a.BoxShift*CFrame.new(e.X/2,-e.Y/2,0),BottomRight=b*a.BoxShift*CFrame.new(-e.X/2,-e.Y/2,0),TagPos=b*a.BoxShift*CFrame.new(0,e.Y/2,0),Torso=b*a.BoxShift}if a.Boxes then local a,b=f(c,e.TopLeft.p)local g,h=f(c,e.TopRight.p)local i,j=f(c,e.BottomLeft.p)local c,e=f(c,e.BottomRight.p)if self.Components.Quad then if b or h or j or e then self.Components.Quad.Visible=true;self.Components.Quad.PointA=Vector2.new(g.X,g.Y)self.Components.Quad.PointB=Vector2.new(a.X,a.Y)self.Components.Quad.PointC=Vector2.new(i.X,i.Y)self.Components.Quad.PointD=Vector2.new(c.X,c.Y)self.Components.Quad.Color=d else self.Components.Quad.Visible=false end end else self.Components.Quad.Visible=false end;if a.Names then local a,e=f(c,e.TagPos.p)if e then self.Components.Name.Visible=true;self.Components.Name.Position=Vector2.new(a.X,a.Y)self.Components.Name.Text=self.Name;self.Components.Name.Color=d;self.Components.Distance.Visible=true;self.Components.Distance.Position=Vector2.new(a.X,a.Y+14)self.Components.Distance.Text=math.floor((c.CFrame.p-b.p).magnitude).."m away"self.Components.Distance.Color=d else self.Components.Name.Visible=false;self.Components.Distance.Visible=false end else self.Components.Name.Visible=false;self.Components.Distance.Visible=false end;if a.Tracers then local b,e=f(c,e.Torso.p)if e then self.Components.Tracer.Visible=true;self.Components.Tracer.From=Vector2.new(b.X,b.Y)self.Components.Tracer.To=Vector2.new(c.ViewportSize.X/2,c.ViewportSize.Y/a.AttachShift)self.Components.Tracer.Color=d else self.Components.Tracer.Visible=false end else self.Components.Tracer.Visible=false end end;function a:Add(b,c)if not b.Parent and not c.RenderInNil then return warn(b,"has no parent")end;local c=setmetatable({Name=c.Name or b.Name,Type="Box",Color=c.Color,Size=c.Size or self.BoxSize,Object=b,Player=c.Player or d:GetPlayerFromCharacter(b),PrimaryPart=c.PrimaryPart or b.ClassName=="Model"and(b.PrimaryPart or b:FindFirstChild("HumanoidRootPart")or b:FindFirstChildWhichIsA("BasePart"))or b:IsA("BasePart")and b,Components={},IsEnabled=c.IsEnabled,Temporary=c.Temporary,ColorDynamic=c.ColorDynamic,RenderInNil=c.RenderInNil},h)if self:GetBox(b)then self:GetBox(b):Remove()end;c.Components["Quad"]=g("Quad",{Thickness=self.Thickness,Color=color,Transparency=1,Filled=false,Visible=self.Enabled and self.Boxes})c.Components["Name"]=g("Text",{Text=c.Name,Color=c.Color,Center=true,Outline=true,Size=19,Visible=self.Enabled and self.Names})c.Components["Distance"]=g("Text",{Color=c.Color,Center=true,Outline=true,Size=19,Visible=self.Enabled and self.Names})c.Components["Tracer"]=g("Line",{Thickness=a.Thickness,Color=c.Color,Transparency=1,Visible=self.Enabled and self.Tracers})self.Objects[b]=c;b.AncestryChanged:Connect(function(b,b)if b==nil and a.AutoRemove~=false then c:Remove()end end)b:GetPropertyChangedSignal("Parent"):Connect(function()if b.Parent==nil and a.AutoRemove~=false then c:Remove()end end)local b=b:FindFirstChildOfClass("Humanoid")if b then b.Died:Connect(function()if a.AutoRemove~=false then c:Remove()end end)end;return c end;local function f(b)local c=d:GetPlayerFromCharacter(b)if not b:FindFirstChild("HumanoidRootPart")then local d;d=b.ChildAdded:Connect(function(e)if e.Name=="HumanoidRootPart"then d:Disconnect()a:Add(b,{Name=c.Name,Player=c,PrimaryPart=e})end end)else a:Add(b,{Name=c.Name,Player=c,PrimaryPart=b.HumanoidRootPart})end end;local function g(a)a.CharacterAdded:Connect(f)if a.Character then coroutine.wrap(f)(a.Character)end end;d.PlayerAdded:Connect(g)for a,a in pairs(d:GetPlayers())do if a~=e then g(a)end end;game:GetService("RunService").RenderStepped:Connect(function()c=b.CurrentCamera;for a,a in(a.Enabled and pairs or ipairs)(a.Objects)do if a.Update then local b,c=pcall(a.Update,a)if not b then warn("[EU]",c,a.Object:GetFullName())end end end end)return a
